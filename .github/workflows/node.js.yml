# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
    run: npm install

    - name: Install PM2
    run: npm install -g pm2

    - name: Restart App with PM2
    run: |
          pm2 stop my-app || echo "App not running"
          pm2 start server.js --name my-app
          pm2 save
     - name: Setup SSH Key
      run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy Code to Windows Server
        run: |
          scp -r . ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:C:\deploy\my-app

      - name: Restart App with PM2
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "pm2 stop my-app || echo 'App not running'"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd C:\deploy\my-app && npm install"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "pm2 start index.js --name my-app"
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "pm2 save"

